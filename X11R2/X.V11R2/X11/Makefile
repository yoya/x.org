#
# Warning: the cpp used on this machine replaces
# all newlines and multiple tabs/spaces in a macro
# expansion with a single space.  Imake tries to
# compensate for this, but is not always
# successful.
#

#
# This makefile is automatically generated by imake... do not modify
# or you may lose your changes when imake generates makefiles again.
# Ignore this message if you are not using imake.
#

            TOP = ./..
             AS = as
             CC = cc
            CPP = /lib/cpp
             LD = ld
           LINT = lint
        INSTALL = install
           TAGS = ctags
             RM = rm -f
             MV = mv
             LN = ln -s
         RANLIB = ranlib
             AR = ar clq
             LS = ls
       LINTOPTS = -axz
    LINTLIBFLAG = -C
           MAKE = make
    STD_DEFINES =
    CDEBUGFLAGS = -O
        DESTDIR =

        PATHSEP = /
         DEPEND = $(DEPENDSRC)/makedepend
          IMAKE = $(IMAKESRC)/imake
            RGB = $(RGBSRC)/rgb
         CFLAGS = $(CDEBUGFLAGS) $(INCLUDES) $(STD_DEFINES) $(DEFINES)
      LINTFLAGS = $(LINTOPTS) $(INCLUDES) $(STD_DEFINES) $(DEFINES) -DLINT
        LDFLAGS = $(CDEBUGFLAGS) $(SYS_LIBRARIES) $(SYSAUX_LIBRARIES)
   INSTUIDFLAGS = -m 4755
   INSTLIBFLAGS = -m 0664
   INSTINCFLAGS = -m 0444
   INSTMANFLAGS = -m 0444
   INSTAPPFLAGS = -m 0444

      USRLIBDIR = $(DESTDIR)/usr/lib
         BINDIR = $(DESTDIR)/usr/bin/X11
         LIBDIR = $(USRLIBDIR)/X11
     LINTLIBDIR = $(USRLIBDIR)/lint
         INCDIR = $(DESTDIR)/usr/include/X11
        FONTDIR = $(LIBDIR)/fonts
         UWMDIR = $(LIBDIR)/uwm
         MANDIR = $(DESTDIR)/usr/man/mann
    XAPPLOADDIR = $(LIBDIR)/app-defaults
         ADMDIR = $(DESTDIR)/usr/adm

      CLIENTSRC = $(TOP)/clients
        DEMOSRC = $(TOP)/demos
         LIBSRC = $(TOP)/lib
        FONTSRC = $(TOP)/fonts
     INCLUDESRC = $(TOP)/X11
      SERVERSRC = $(TOP)/server
        UTILSRC = $(TOP)/util
     EXAMPLESRC = $(TOP)/examples
     CONTRIBSRC = $(TOP)/contrib
         DOCSRC = $(TOP)/doc
      DEPENDSRC = $(UTILSRC)/makedepend
       IMAKESRC = $(UTILSRC)/imake
       IRULESRC = $(UTILSRC)/imake.includes
         RGBSRC = $(UTILSRC)/rgb
        XLIBSRC = $(LIBSRC)/X
     TOOLKITSRC = $(LIBSRC)/Xt
     AWIDGETSRC = $(LIBSRC)/Xaw
     OLDXLIBSRC = $(LIBSRC)/oldX
   EXTENSIONSRC = $(TOP)/extensions
        XMANSRC = $(DOCSRC)/Xlib/Xman
   EXTENSIONLIB = $(EXTENSIONSRC)/lib/libXext.a
           XLIB = $(XLIBSRC)/libX11.a
        OLDXLIB = $(OLDXLIBSRC)/liboldX.a
       XTOOLLIB = $(TOOLKITSRC)/libXt.a
         XAWLIB = $(AWIDGETSRC)/libXaw.a
       LINTXLIB = $(XLIBSRC)/llib-lX11.ln
      LINTXTOOL = $(TOOLKITSRC)/llib-lXt.ln
        LINTXAW = $(AWIDGETSRC)/llib-lXaw.ln
       INCLUDES = -I$(TOP)
      MACROFILE = Sun.macros
      IMAKE_CMD = $(NEWTOP)$(IMAKE) -TImake.tmpl \
			-I$(NEWTOP)$(IRULESRC) \
			-s Makefile
         RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a \
			tags TAGS make.log

EXPORTS = \
	X.h \
	XWDFile.h \
	Xatom.h \
	Xmd.h \
	Xos.h \
	Xproto.h \
	Xprotostr.h \
	copyright.h \
	keysym.h \
	keysymdef.h \
	DECkeysym.h

IMPORTS = \
	$(OLDXLIBSRC)/X10.h \
	$(XLIBSRC)/Xlib.h \
	$(XLIBSRC)/Xresource.h \
	$(XLIBSRC)/Xutil.h \
	$(FONTSRC)/cursorfont.h \
	$(TOOLKITSRC)/Cardinals.h \
	$(TOOLKITSRC)/Composite.h \
	$(TOOLKITSRC)/CompositeP.h \
	$(TOOLKITSRC)/Constraint.h \
	$(TOOLKITSRC)/ConstrainP.h \
	$(TOOLKITSRC)/Convert.h \
	$(TOOLKITSRC)/Core.h \
	$(TOOLKITSRC)/CoreP.h \
	$(TOOLKITSRC)/Intrinsic.h \
	$(TOOLKITSRC)/IntrinsicP.h \
	$(TOOLKITSRC)/Misc.h \
	$(TOOLKITSRC)/Quarks.h \
	$(TOOLKITSRC)/Shell.h \
	$(TOOLKITSRC)/ShellP.h \
	$(TOOLKITSRC)/StringDefs.h \
	$(TOOLKITSRC)/TM.h \
	$(TOOLKITSRC)/Vendor.h \
	$(TOOLKITSRC)/VendorP.h \
	$(AWIDGETSRC)/AsciiText.h \
	$(AWIDGETSRC)/AsciiTextP.h \
	$(AWIDGETSRC)/Box.h \
	$(AWIDGETSRC)/BoxP.h \
	$(AWIDGETSRC)/Cascade.h \
	$(AWIDGETSRC)/CascadeP.h \
	$(AWIDGETSRC)/Clock.h \
	$(AWIDGETSRC)/ClockP.h \
	$(AWIDGETSRC)/Command.h \
	$(AWIDGETSRC)/CommandP.h \
	$(AWIDGETSRC)/Dialog.h \
	$(AWIDGETSRC)/DialogP.h \
	$(AWIDGETSRC)/Form.h \
	$(AWIDGETSRC)/FormP.h \
	$(AWIDGETSRC)/Grip.h \
	$(AWIDGETSRC)/GripP.h \
	$(AWIDGETSRC)/Label.h \
	$(AWIDGETSRC)/LabelP.h \
	$(AWIDGETSRC)/Load.h \
	$(AWIDGETSRC)/LoadP.h \
	$(AWIDGETSRC)/Logo.h \
	$(AWIDGETSRC)/LogoP.h \
	$(AWIDGETSRC)/Mailbox.h \
	$(AWIDGETSRC)/MailboxP.h \
	$(AWIDGETSRC)/Scroll.h \
	$(AWIDGETSRC)/ScrollP.h \
	$(AWIDGETSRC)/Simple.h \
	$(AWIDGETSRC)/SimpleP.h \
	$(AWIDGETSRC)/Text.h \
	$(AWIDGETSRC)/TextP.h \
	$(AWIDGETSRC)/VPaned.h \
	$(AWIDGETSRC)/VPanedP.h \
	$(AWIDGETSRC)/Viewport.h \
	$(AWIDGETSRC)/ViewportP.h

SUBIMPORTS = \
	$(EXTENSIONSRC)/include/zoid.h \
	$(EXTENSIONSRC)/include/bezier.h

SUBDIRS = bitmaps

INSTALLFLAGS = $(INSTINCFLAGS)

all: $(IMPORTS) $(SUBIMPORTS) extensions
	@-(list=`echo $(IMPORTS) | sed -e 's/[^ ]*\///g'`; set -x; $(RM) $$list)
	$(LN) $(IMPORTS) .
	@-(list=`echo $(SUBIMPORTS) | sed -e 's/[^ ]*\///g'`; \
		set -x; cd extensions; $(RM) $$list)
	@for i in $(SUBIMPORTS); do \
		(set -x; cd extensions; $(LN) ../$$i .); \
	done
	$(RM) Atoms.h
	$(LN) StringDefs.h Atoms.h

extensions:
	-mkdir $@

install::
	-mkdir $(INCDIR)

install:: $(EXPORTS)
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in $(EXPORTS); do \
	(set -x; $(INSTALL) -c $(INSTALLFLAGS) $$i $(INCDIR)); \
	done

clean::
	@-(list=`echo $(IMPORTS) | sed -e 's/[^ ]*\///g'`; set -x; $(RM) $$list)
	@-(list=`echo $(SUBIMPORTS) | sed -e 's/[^ ]*\///g'`; \
		set -x; cd extensions; $(RM) $$list)
	$(RM) Atoms.h

install::
	-cd $(INCDIR); mkdir $(SUBDIRS)
	@for i in $(SUBDIRS); do \
		( \
			set -x; \
			cd $$i ; \
			for f in * ; do \
			$(INSTALL) -c $(INSTALLFLAGS) $$f $(INCDIR)/$$i; \
			done; \
		); \
	done

depend:
	@echo "depend: skipping X11"

clean::
	$(RM_CMD) \#*

Makefile:: $(IMAKE)

Makefile:: Imakefile \
	$(IRULESRC)/Imake.tmpl \
	$(IRULESRC)/Imake.rules \
	$(IRULESRC)/$(MACROFILE)
	-$(RM) Makefile.bak; $(MV) Makefile Makefile.bak
	$(IMAKE_CMD) -DTOPDIR=$(TOP)

$(IMAKE):
	@echo "making $(IMAKESRC)"; \
	cd $(IMAKESRC); $(MAKE)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

install::
	@echo "install done"

Makefiles::

