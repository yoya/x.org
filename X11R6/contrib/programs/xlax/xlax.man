.TH XLAX 1 "Release 6" "X Version 11"
.SH NAME
xlax - X window system program to send keyboard input to multiple windows
.SH SYNOPSIS
.B "xlax"
[-\fItoolkit options\fP]
.SH DESCRIPTION
.PP
.I Xlax
is an X Window System program that will send keyboard input it
receives to multiple selected windows.  When run, 
.I Xlax
will bring up its main window.  There will be four buttons on it,
"quit", "add window", "send string" and "kill window."

Quit will terminate 
.I xlax
and add window will change the cursor to a cross-hair and allow the
user to select any window on the screen by pressing a mouse button.
The user will be able to continue selecting windows until either the 
.I xlax
window or a window that has already been selected, is selected.

When a window is selected, its name will appear in the 
.I xlax
window.  Clicking the mouse on the window name will toggle whether
that window should receive input.  When the user types anywhere in the
.I xlax 
window, those keystrokes will be sent to all selected windows.

Kill window will allow the user to select a window and remove it from
.I xlax's 
list (note: the user must click on the actual window, not the name that
appears in 
.I xlax).

There is a window to the right of each name.  The user can type 
into it.  When Send String is selected, the specific string associated 
with each window will be sent to those windows.  Clicking the first
mouse button in that text area will clear that string and allow the 
user to re-enter the string.  Up to 150 characters are allowed.

This tool tends to be useful for system administration tasks that
require almost the same thing to be done in several different 
windows, but require some human intervention (e.g. some tape backups
or building multiple servers).  The string area is useful for machine
or platform specific strings (such as machine names or machine type).

.SH ENVIRONMENT
.PP
.TP 8
.B DISPLAY
To get default host and display number.

.SH CAVEATS
For 
.I xlax 
to work on an xterm, "allowSendEvents" must be enabled on the 
xterm.  Note that this means that anyone can send keystrokes
to that xterm, so this should not be run in an insecure or
unmonitored environment.

.SH BUGS
Probably something, but nothing that comes to mind.
.SH SEE ALSO
xterm(1)
.SH COPYRIGHT
Copyright 1992, Frank Adelstein.
.br

