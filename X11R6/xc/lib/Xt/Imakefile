XCOMM $XConsortium: Imakefile,v 1.110 94/04/04 21:54:23 gildea Exp $
#define DoNormalLib NormalLibXt
#define DoSharedLib SharedLibXt
#define DoDebugLib DebugLibXt
#define DoProfileLib ProfileLibXt
#define HasSharedData YES
#define LibName Xt
#define SoRev SOXTREV

#include <Threads.tmpl>

#ifndef MotifBC
#define MotifBC NO
#endif
				   
/* "YES" allows illegal XtGetValues requests with NULL ArgVal to
   usually succeed, as R5 did.  Some applications erroneously rely on
   this behavior.  Support for this will be removed in a future release. */
#ifndef GetValuesBC
#define GetValuesBC NO
#endif

#ifdef SharedXtReqs
REQUIREDLIBS = SharedXtReqs
#endif

/* config options */

XFILESEARCHPATHDEFAULT = XFileSearchPathDefault

XTERRORPREFIX = XtErrorPrefix
XTWARNINGPREFIX = XtWarningPrefix

#if UnalignedReferencesAllowed
  ALIGN_DEFINES = -DUNALIGNED
#endif
#if DoSharedLib && defined(SharedAllocateLocalDefines)
#undef AllocateLocalDefines
#define AllocateLocalDefines SharedAllocateLocalDefines
#endif
#if HasPoll
   POLL_DEFINES = -DUSE_POLL
#endif
        DEFINES = AllocateLocalDefines $(ALIGN_DEFINES) $(POLL_DEFINES) XtExtraDefines

     DB_DEFINES = -DERRORDB=\"$(LIBDIR)/XtErrorDB\" \
		  -DXTERROR_PREFIX=\"$(XTERRORPREFIX)\" \
		  -DXTWARNING_PREFIX=\"$(XTWARNINGPREFIX)\"

   SRCH_DEFINES = -DXFILESEARCHPATHDEFAULT=\"$(XFILESEARCHPATHDEFAULT)\"
#if Malloc0ReturnsNull
  ALLOC_DEFINES = -DMALLOC_0_RETURNS_NULL
#endif
#if MotifBC
     BC_DEFINES = -DMOTIFBC
#endif
#if GetValuesBC
     GETVALUES_DEFINES = -DGETVALUES_BUG
#endif
#if NoRConst
 RCONST_DEFINES = -DNORCONST
#endif

       LINTLIBS = $(LINTXLIB)

HEADERS = \
	Composite.h \
	CompositeP.h \
	Constraint.h \
	ConstrainP.h \
	Core.h \
	CoreP.h \
	Intrinsic.h \
	IntrinsicP.h \
	Object.h \
	ObjectP.h \
	RectObj.h \
	RectObjP.h \
	Shell.h \
	ShellP.h \
	StringDefs.h \
	Vendor.h \
	VendorP.h

SRCS = \
	ActionHook.c \
	Alloc.c \
	ArgList.c \
	Callback.c \
	ClickTime.c \
	Composite.c \
	Constraint.c \
	Convert.c \
	Converters.c \
	Core.c \
	Create.c \
	Destroy.c \
	Display.c \
	Error.c \
	Event.c \
	EventUtil.c \
	Functions.c \
	GCManager.c \
	Geometry.c \
	GetActKey.c \
	GetResList.c \
	GetValues.c \
	HookObj.c \
	Hooks.c \
	Initialize.c \
	Intrinsic.c \
	Keyboard.c \
	Manage.c \
	NextEvent.c \
	Object.c \
	PassivGrab.c \
	Pointer.c \
	Popup.c \
	PopupCB.c \
	RectObj.c \
	Resources.c \
	Selection.c \
	SetSens.c \
	SetValues.c \
	SetWMCW.c \
	Shell.c \
	StringDefs.c \
	Threads.c \
	TMaction.c \
	TMgrab.c \
	TMkey.c \
	TMparse.c \
	TMprint.c \
	TMstate.c \
	VarCreate.c \
	VarGet.c \
	Varargs.c \
	Vendor.c \
	sharedlib.c

OBJS = \
	ActionHook.o \
	Alloc.o \
	ArgList.o \
	Callback.o \
	ClickTime.o \
	Composite.o \
	Constraint.o \
	Convert.o \
	Converters.o \
	Core.o \
	Create.o \
	Destroy.o \
	Display.o \
	Error.o \
	Event.o \
	EventUtil.o \
	Functions.o \
	GCManager.o \
	Geometry.o \
	GetActKey.o \
	GetResList.o \
	GetValues.o \
	HookObj.o \
	Hooks.o \
	Initialize.o \
	Intrinsic.o \
	Keyboard.o \
	Manage.o \
	NextEvent.o \
	Object.o \
	PassivGrab.o \
	Pointer.o \
	Popup.o \
	PopupCB.o \
	RectObj.o \
	Resources.o \
	Selection.o \
	SetSens.o \
	SetValues.o \
	SetWMCW.o \
	Shell.o \
	StringDefs.o \
	Threads.o \
	TMaction.o \
	TMgrab.o \
	TMkey.o \
	TMparse.o \
	TMprint.o \
	TMstate.o \
	VarCreate.o \
	VarGet.o \
	Varargs.o \
	Vendor.o

#if SharedDataSeparation
UNSHAREDOBJS = StringDefs.o sharedlib.o
#else
UNSHAREDOBJS = sharedlib.o
#endif

#include <Library.tmpl>

SpecialCLibObjectRule(Intrinsic,$(ICONFIGFILES),$(SRCH_DEFINES))
SpecialCLibObjectRule(Error,$(ICONFIGFILES),$(DB_DEFINES))
SpecialCLibObjectRule(Alloc,$(_NOOP_),$(ALLOC_DEFINES))
SpecialCLibObjectRule(Converters,$(ICONFIGFILES),$(BC_DEFINES))
SpecialCLibObjectRule(Resources,$(ICONFIGFILES),$(GETVALUES_DEFINES))
SpecialCLibObjectRule(TMaction,$(_NOOP_),$(RCONST_DEFINES))
#if DoSharedLib
SpecialCObjectRule(sharedlib,$(_NOOP_),$(SHLIBDEF))
#endif

DependTarget()
