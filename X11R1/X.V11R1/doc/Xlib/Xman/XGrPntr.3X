.na
.de FD
.LP
.KS
.TA 1.0i 3i
.ta 1.0i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de PN
.ie t \f(H\|\\$1\|\fR\\$2
.el \fI\|\\$1\|\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XGrabPointer 3X 
.SH NAME
XGrabPointer, XUngrabPointer, XChangeActivePointerGrab \- manipulate the pointer
.SH SYNTAX
.\" $Header: XGrabPointer.f,v 11.10 87/08/15 12:13:51 mento Exp $
int XGrabPointer\^(\^\fIdisplay\fP, \fIgrab_window\fP\^, \fIowner_events\fP\^, \fIevent_mask\fP\^, \fIpointer_mode\fP\^,
               \fIkeyboard_mode\fP\^, \fIconfine_to\fP\^, \fIcursor\fP\^, \fItime\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIgrab_window\fP\^;
.br
      Bool \fIowner_events\fP\^;
.br
      unsigned int \fIevent_mask\fP\^;	
.br
      int \fIpointer_mode\fP\^, \fIkeyboard_mode\fP\^; 
.br
      Window \fIconfine_to\fP\^; 
.br
      Cursor \fIcursor\fP\^; 
.br
      Time \fItime\fP\^; 
.LP
.\" $Header: XUngrabPntr.f,v 11.6 87/08/15 12:17:27 mento Exp $
XUngrabPointer\^(\^\fIdisplay\fP, \fItime\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Time \fItime\fP\^;
.LP
.\" $Header: XChActPGrab.f,v 11.7 87/08/15 12:10:53 mento Exp $
XChangeActivePointerGrab\^(\^\fIdisplay\fP, \fIevent_mask\fP\^, \fIcursor\fP\^, \fItime\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      unsigned int \fIevent_mask\fP\^;
.br
      Cursor \fIcursor\fP\^;
.br
      Time \fItime\fP\^;
.SH ARGUMENTS
.\" $Header: confineto.a,v 11.4 87/09/02 13:53:41 mento Exp $
.IP \fIconfine_to\fP 1i
Specifies the window to confine the pointer in or
.PN None  
if it is not to be confined.
.\" $Header: cursor_grab.a,v 1.1 87/09/02 13:56:22 mento Exp $
.IP \fIcursor\fP 1i
Specifies the cursor that is to be displayed during the grab. 
.\" $Header: display.a,v 11.8 87/09/03 11:02:24 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.\" $Header: pointermask.a,v 11.6 87/09/09 19:30:00 mento Exp $
.IP \fIevent_mask\fP 1i
Specifies which pointer events are reported to the client.
They can be the bitwise inclusive OR of these pointer event mask bits:
.PN ButtonPressMask ,
.PN ButtonReleaseMask ,
.PN EnterWindowMask ,
.PN LeaveWindowMask ,
.PN PointerMotionMask ,
.PN PointerMotionHintMask ,
.PN Button1MotionMask ,
.PN Button2MotionMask ,
.PN Button3MotionMask ,
.PN Button4MotionMask ,
.PN Button5MotionMask ,
.PN ButtonMotionMask ,
.PN KeyMapStateMask .
.IP \fIgrab_window\fP 1i
Specifies the window ID of the window relative to which events are reported
while it is grabbed.
.\" $Header: keybdmode.a,v 11.3 87/05/29 12:37:42 jg Exp $
.IP \fIkeyboard_mode\fP 1i
Controls further processing of keyboard events.
You can pass one of these constants:
.PN GrabModeSync 
or
.PN GrabModeAsync .
.\" $Header: ownerevents2.a,v 1.1 87/09/02 13:46:06 mento Exp $
.IP \fIowner_events\fP 1i
Specifies if the pointer events are to be reported normally (pass
.PN True )
or with respect to the grab window if selected by the event mask (pass
.PN False ).
.\" $Header: pointermode.a,v 11.3 87/05/29 12:36:27 jg Exp $
.IP \fIpointer_mode\fP 1i
Controls further processing of pointer events.
You can pass one of these constants:
.PN GrabModeSync 
or
.PN GrabModeAsync .
.IP \fItime\fP 1i
Specifies the time.
You can pass either a timestamp, expressed in milliseconds, or the constant
.PN CurrentTime .
.SH DESCRIPTION
.\" $Header: XGrabPointer.d,v 1.2 87/09/04 20:28:27 mento Exp $
The
.PN XGrabPointer
function actively grabs control of the pointer and returns
.PN GrabSuccess
if the grab was successful.
.ds fd .PN XGrabPointer
The errors that can be generated by 
\*(fd
are
.PN BadWindow ,
.PN BadCursor ,
and
.PN BadValue .
.LP
.\" $Header: XUngrabPntr.d,v 1.2 87/09/07 16:13:20 jg Exp $
The
.PN XUngrabPointer
function releases the pointer and any queued events,
if this client has actively grabbed the pointer from
.PN XGrabPointer ,
.PN XGrabButton ,
or from a normal button press.
.LP
.\" $Header: XChActPGrab.d,v 1.2 87/08/31 10:56:21 mento Exp $
The
.PN XChangeActivePointerGrab
function changes the specified dynamic parameters if the pointer is actively
grabbed by the client and if the specified time is no earlier than the
last-pointer-grab time and no later than the current X server time.
.ds fd .PN XChangeActivePointerGrab
The error that can be generated by
\*(fd 
is
.PN BadCursor .
.SH DIAGNOSTICS
.\" $Header: badcursor.e,v 1.1 87/09/04 08:22:58 mento Exp $
.TP 1i
.PN BadCursor
A value for a Cursor argument does not name a defined Cursor.
.\" $Header: badvalue.e,v 1.1 87/09/04 08:23:19 mento Exp $
.TP 1i
.PN BadValue
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.\" $Header: badwindow.e,v 1.1 87/09/04 08:23:20 mento Exp $
.TP 1i
.PN BadWindow
A value for a Window argument does not name a defined Window.
.SH "SEE ALSO"
XAllowEvents(3X),
XGrabButton(3X),
XGrabKey(3X),
XGrabKeyboard(3X)
.br
\fIXlib \- C Language X Interface, Protocol Version 11\fP
