.na
.de FD
.LP
.KS
.TA 1.0i 3i
.ta 1.0i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de PN
.ie t \f(H\|\\$1\|\fR\\$2
.el \fI\|\\$1\|\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XUnmapWindow 3X 
.SH NAME
XUnmapWindow, XUnmapSubwindows \- unmap windows
.SH SYNTAX
.\" $Header: XUnmapWindow.f,v 11.3 87/08/15 12:17:32 mento Exp $
XUnmapWindow\^(\^\fIdisplay\fP, \fIw\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.LP
.\" $Header: XUnmapSubs.f,v 11.3 87/08/15 12:17:31 mento Exp $
XUnmapSubwindows\^(\^\fIdisplay\fP, \fIw\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.SH ARGUMENTS
.\" $Header: display.a,v 11.8 87/09/03 11:02:24 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.\" $Header: w.a,v 11.2 87/03/28 11:02:22 mento Exp $
.IP \fIw\fP 1i
Specifies the window ID.
.SH DESCRIPTION
.\" $Header: XUnmapWindow.d,v 1.1 87/08/27 14:22:15 mento Exp $
The
.PN XUnmapWindow
function unmaps the specified window and causes the X server to generate an
.PN UnmapNotify
.IN "UnmapNotify Event"
.IN "XUnmapWindow"
event.
.ds fd .PN XUnmapWindow
The error that can be generated by
\*(fd 
is
.PN BadWindow .
.LP
.\" $Header: XUnmapSubs.d,v 1.2 87/08/28 05:18:56 mento Exp $
The
.PN XUnmapSubwindows
function unmaps all subwindows for the specified window in bottom to top
stacking order.
It causes the X server to generate an
.PN UnmapNotify
event on each subwindow and exposure events on formerly obscured windows.
.IN "UnmapNotify Event"
.IN "Exposure Event"
.ds fd .PN XUnmapSubwindows
The error that can be generated by
\*(fd 
is
.PN BadWindow .
.SH DIAGNOSTICS
.\" $Header: badwindow.e,v 1.1 87/09/04 08:23:20 mento Exp $
.TP 1i
.PN BadWindow
A value for a Window argument does not name a defined Window.
.SH "SEE ALSO"
XChangeWindowAttributes(3X),
XConfigureWindow(3X),
XCreateWindow(3X),
XDestroyWindow(3X),
XMapWindow(3X)
XRaiseWindow(3X)
.br
\fIXlib \- C Language X Interface, Protocol Version 11\fP
