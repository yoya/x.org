.na
.de FD
.LP
.KS
.TA 1.0i 3i
.ta 1.0i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de PN
.ie t \f(H\|\\$1\|\fR\\$2
.el \fI\|\\$1\|\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XSetIconName 3X 
.SH NAME
XSetIconName, XGetIconName \- set or get icon names
.SH SYNTAX
.\" $Header: XSetIName.f,v 1.2 87/08/15 12:16:21 mento Exp $
XSetIconName\^(\^\fIdisplay\fP, \fIw\fP\^, \fIicon_name\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      char *\fIicon_name\fP\^;
.LP
.\" $Header: XGetIName.f,v 1.4 87/09/05 08:22:23 mento Exp $
int XGetIconName\^(\^\fIdisplay\fP, \fIw\fP\^, \fIicon_name_return\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      char **\fIicon_name_return\fP\^;
.SH ARGUMENTS
.\" $Header: display.a,v 11.8 87/09/03 11:02:24 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.\" $Header: icon_name.a,v 1.2 87/06/14 23:36:46 hania Exp $
.IP \fIicon_name\fP 1i
Specifies the name to be displayed in the window's icon.
.\" $Header: icon_name1.a,v 1.4 87/09/05 08:23:10 mento Exp $
.IP \fIicon_name_return\fP 1i
Returns a pointer to the name to be displayed in the window's icon. 
The name will be a null-terminated string.
.\" $Header: w.a,v 11.2 87/03/28 11:02:22 mento Exp $
.IP \fIw\fP 1i
Specifies the window ID.
.SH DESCRIPTION
.\" $Header: XSetIName.d,v 1.1 87/08/27 14:21:25 mento Exp $
The
.PN XSetIconName
function sets the name to be displayed in a window's icon.
.ds fd .PN XSetIconName
The errors that can be generated by 
\*(fd
are
.PN BadWindow
and
.PN BadAlloc .
.LP
.\" $Header: XGetIName.d,v 1.2 87/09/05 08:25:36 mento Exp $
The
.PN XGetIconName
function obtains the window name to be displayed in its icon and either
returns a nonzero if it succeeds or zero (0) if it fails 
(for example, if no icon name has been set for the argument window).
.ds fd .PN XGetIconName
The error that can be generated by
\*(fd 
is
.PN BadWindow .
.SH PROPERTY
WM_ICON_NAME
.SH DIAGNOSTICS
.\" $Header: badalloc.e,v 1.3 87/09/11 11:17:14 mento Exp $
.TP 1i
.PN BadAlloc
The server failed to allocate the requested resource or server memory.
.\" $Header: badwindow.e,v 1.1 87/09/04 08:23:20 mento Exp $
.TP 1i
.PN BadWindow
A value for a Window argument does not name a defined Window.
.SH "SEE ALSO"
XSetClassHint(3X),
XSetCommand(3X),
XSetIconSizeHints(3X),
XSetNormalHints(3X),
XSetSizeHints(3X),
XSetStandardProperties(3X),
XSetTransientForHint(3X),
XSetWMHints(3X),
XSetZoomHints(3X),
XStoreName(3X)
.br
\fIXlib \- C Language X Interface, Protocol Version 11\fP
