.na
.de FD
.LP
.KS
.TA 1.0i 3i
.ta 1.0i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de PN
.ie t \f(H\|\\$1\|\fR\\$2
.el \fI\|\\$1\|\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XStoreColors 3X 
.SH NAME
XStoreColors, XStoreColor, XStoreNamedColor \- set colors
.SH SYNTAX
.\" $Header: XStoreColors.f,v 11.6 87/08/15 12:16:54 mento Exp $
XStoreColors\^(\^\fIdisplay\fP, \fIcmap\fP\^, \fIdefs\fP\^, \fIncolors\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Colormap \fIcmap\fP\^;
.br
      XColor \fIdefs\fP\^[\^]\^;
.br
      int \fIncolors\fP\^;
.LP
.\" $Header: XStoreColor.f,v 11.9 87/08/15 12:16:53 mento Exp $
XStoreColor\^(\^\fIdisplay\fP, \fIcmap\fP\^, \fIscreen_def_return\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Colormap \fIcmap\fP\^;
.br
      XColor *\fIscreen_def_return\fP\^;
.LP
.\" $Header: XStoreNColor.f,v 11.4 87/08/15 12:16:55 mento Exp $
XStoreNamedColor\^(\^\fIdisplay\fP, \fIcmap\fP\^, \fIcolor\fP\^, \fIpixel\fP\^, \fIflags\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Colormap \fIcmap\fP\^;
.br
      char *\^\fIcolor\fP\^;
.br
      unsigned long \fIpixel\fP\^;
.br
      int \fIflags\fP\^;
.SH ARGUMENTS
.\" $Header: cmap.a,v 11.3 87/06/16 08:35:24 jg Exp $
.IP \fIcmap\fP 1i
Specifies the color map ID.
.\" $Header: color.a,v 11.3 87/08/31 11:39:14 mento Exp $
.IP \fIcolor\fP 1i
Specifies the color name string (for example, ``red''). 
The function then allocates this color cell.
.\" $Header: defs.a,v 11.2 87/03/28 10:55:11 mento Exp $
.IP \fIdefs\fP 1i
Specifies an array of color definition structures.
.\" $Header: display.a,v 11.8 87/09/03 11:02:24 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.\" $Header: flags.a,v 11.2 87/03/28 10:56:15 mento Exp $
.IP \fIflags\fP 1i
Specifies which red, green, and blue indexes are set.
.\" $Header: ncolors.a,v 11.3 87/05/18 10:54:12 jg Exp $
.IP \fIncolors\fP 1i
.\"Specifies the number of color definition structures. 
Specifies the number of 
.PN XColor
structures in the color definition array.
.\" $Header: pixel.a,v 11.2 87/03/28 10:59:10 mento Exp $
.IP \fIpixel\fP 1i
Specifies the entry in the color map. 
.\" $Header: def.a,v 11.7 87/09/10 17:06:31 mento Exp $
.IP \fIscreen_def_return\fP 1i
Returns the values actually used in the color map.
.SH DESCRIPTION
.\" $Header: XStoreColors.d,v 1.1 87/08/27 14:21:51 mento Exp $
The
.PN XStoreColors
function
changes the color map entries of the pixel values
specified in the
pixel members of the
.PN XColor
structures.
.ds fd .PN XStoreColors
The errors that can be generated by 
\*(fd
are
.PN BadAccess 
and
.PN BadColor .
.LP
.\" $Header: XStoreColor.d,v 1.1 87/08/27 14:21:50 mento Exp $
The
.PN XStoreColor
function changes the color map entry of the pixel value specified in the
pixel member of the
.PN XColor
structure.
.ds fd .PN XStoreColor
The error that can be generated by
\*(fd 
is
.PN BadColor .
.LP
.\" $Header: XStoreNColor.d,v 1.2 87/08/28 08:25:44 mento Exp $
The
.PN XStoreNamedColor
function looks up the named color with respect to the screen associated with
cmap and stores the result in cmap.
.ds fd .PN XStoreNamedColor
The errors that can be generated by 
\*(fd
are
.PN BadColor ,
.PN BadAccess ,
.PN BadName ,
and
.PN BadValue .
.SH DIAGNOSTICS
.\" $Header: badaccess2.e,v 1.1 87/09/04 08:22:45 mento Exp $
.TP 1i
.PN BadAccess
A client attempted
to free a color map entry that it did not already allocate.
.\" $Header: badaccess3.e,v 1.1 87/09/04 08:22:50 mento Exp $
.TP 1i
.PN BadAccess
A client attempted
to store into a read-only color map entry.
.\" $Header: badcolor.e,v 1.1 87/09/04 08:22:57 mento Exp $
.TP 1i
.PN BadColor
A value for a Colormap argument does not name a defined Colormap.
.\" $Header: badname.e,v 1.1 87/09/04 08:23:14 mento Exp $
.TP 1i
.PN BadName
A font or color of the specified name does not exist.
.\" $Header: badvalue.e,v 1.1 87/09/04 08:23:19 mento Exp $
.TP 1i
.PN BadValue
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.SH "SEE ALSO"
XAllocColor(3X),
XCreateColormap(3X),
XQueryColor(3X)
.br
\fIXlib \- C Language X Interface, Protocol Version 11\fP
