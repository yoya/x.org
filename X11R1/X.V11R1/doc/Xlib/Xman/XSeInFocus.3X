.na
.de FD
.LP
.KS
.TA 1.0i 3i
.ta 1.0i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de PN
.ie t \f(H\|\\$1\|\fR\\$2
.el \fI\|\\$1\|\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XSetInputFocus 3X 
.SH NAME
XSetInputFocus, XGetInputFocus \- control input focus
.SH SYNTAX
.\" $Header: XSetInFocus.f,v 11.5 87/08/15 12:16:24 mento Exp $
XSetInputFocus\^(\^\fIdisplay\fP, \fIfocus\fP\^, \fIrevert_to\fP\^, \fItime\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIfocus\fP\^;
.br
      int \fIrevert_to\fP\^; 
.br
      Time \fItime\fP\^; 
.LP
.\" $Header: XGetInFocus.f,v 11.6 87/08/15 12:13:27 mento Exp $
XGetInputFocus\^(\^\fIdisplay\fP, \fIfocus_return\fP\^, \fIrevert_to_return\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window *\fIfocus_return\fP\^;
.br
      int *\fIrevert_to_return\fP\^;
.SH ARGUMENTS
.\" $Header: display.a,v 11.8 87/09/03 11:02:24 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.IP \fIfocus\fP 1i
Specifies the window ID.
.\" $Header: focus.a,v 1.7 87/09/10 15:20:30 mento Exp $
.IP \fIfocus_return\fP 1i
Returns the focus window ID, the constant
.PN PointerRoot ,
or the constant
.PN None .
.\" $Header: revertto.a,v 11.4 87/06/02 10:44:10 jg Exp $
.IP \fIrevert_to\fP 1i
Specifies which window the input focus reverts to if the window becomes not
viewable.
You can pass one of these constants:
.PN RevertToParent , 
.PN RevertToPointerRoot , 
or 
.PN RevertToNone .
.\" $Header: reverttoret.a,v 1.5 87/09/10 15:22:00 mento Exp $
.IP \fIrevert_to_return\fP 1i
Returns the current focus state.
The function can return one of these constants:
.PN RevertToParent , 
.PN RevertToPointerRoot , 
or 
.PN RevertToNone .
.IP \fItime\fP 1i
Specifies the time.
You can pass either a timestamp, expressed in milliseconds, or the constant
.PN CurrentTime .
.SH DESCRIPTION
.\" $Header: XSetInFocus.d,v 1.1 87/08/27 14:21:27 mento Exp $
The
.PN XSetInputFocus
function changes the input focus and the last-focus-change time.
.ds fd .PN XSetInputFocus
The errors that can be generated by 
\*(fd
are
.PN BadWindow 
and
.PN BadValue .
.LP
.\" $Header: XGetInFocus.d,v 1.1 87/08/27 14:19:30 mento Exp $
The
.PN XGetInputFocus
function returns the focus window ID and the current focus state.
.SH DIAGNOSTICS
.\" $Header: badvalue.e,v 1.1 87/09/04 08:23:19 mento Exp $
.TP 1i
.PN BadValue
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.\" $Header: badwindow.e,v 1.1 87/09/04 08:23:20 mento Exp $
.TP 1i
.PN BadWindow
A value for a Window argument does not name a defined Window.
.SH "SEE ALSO"
XWarpPointer(3X)
.br
\fIXlib \- C Language X Interface, Protocol Version 11\fP
