.na
.de FD
.LP
.KS
.TA 1.0i 3i
.ta 1.0i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de PN
.ie t \f(H\|\\$1\|\fR\\$2
.el \fI\|\\$1\|\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XCreateColormap 3X 
.SH NAME
XCreateColormap, XCopyColormapAndFree, XFreeColormap, XSetWindowColormap 
\- create, copy, or destroy colormaps
.SH SYNTAX
.\" $Header: XCreateCmap.f,v 11.3 87/08/15 12:11:41 mento Exp $
Colormap XCreateColormap\^(\^\fIdisplay\fP, \fIw\fP\^, \fIvisual\fP\^, \fIalloc\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      Visual *\fIvisual\fP\^;
.br
      int \fIalloc\fP\^;
.LP
.\" $Header: XCopyCmapFr.f,v 11.3 87/08/15 12:11:21 mento Exp $
Colormap XCopyColormapAndFree\^(\^\fIdisplay\fP, \fIcmap\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Colormap \fIcmap\fP\^;
.LP
.\" $Header: XFreeCmap.f,v 11.3 87/08/15 12:12:43 mento Exp $
XFreeColormap\^(\^\fIdisplay\fP, \fIcmap\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Colormap \fIcmap\fP\^;
.LP
.\" $Header: XChCmap.f,v 11.4 87/08/15 12:10:54 mento Exp $
XSetWindowColormap\^(\^\fIdisplay\fP, \fIw\fP\^, \fIcmap\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      Colormap \fIcmap\fP\^;
.SH ARGUMENTS
.\" $Header: alloc.a,v 11.4 87/05/29 06:27:41 jg Exp $
.IP \fIalloc\fP 1i
Specifies the color map entries to be allocated.
You can pass one of these constants: 
.PN AllocNone 
or 
.PN AllocAll .
.\" $Header: cmap.a,v 11.3 87/06/16 08:35:24 jg Exp $
.IP \fIcmap\fP 1i
Specifies the color map ID.
.\" $Header: display.a,v 11.8 87/09/03 11:02:24 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.\" $Header: visual1.a,v 11.5 87/09/01 14:09:58 mento Exp $
.IP \fIvisual\fP 1i
Specifies a pointer to a visual type supported on the screen.
If the visual type is not one supported by the screen, the function returns a
.PN BadMatch
error. 
.\" $Header: w.a,v 11.2 87/03/28 11:02:22 mento Exp $
.IP \fIw\fP 1i
Specifies the window ID.
.SH DESCRIPTION
.\" $Header: XCreateCmap.d,v 1.2 87/08/28 07:56:49 mento Exp $
The
.PN XCreateColormap
function creates a color map of the specified visual type for the screen on which
the window resides and associates the
.PN Colormap
ID with it.
.ds fd .PN XCreateColormap
The errors that can be generated by 
\*(fd
are
.PN BadWindow ,
.PN BadAlloc ,
.PN BadMatch ,
and
.PN BadValue .
.LP
.\" $Header: XCopyCmapFr.d,v 1.1 87/08/27 14:18:21 mento Exp $
The
.PN XCopyColormapAndFree
function obtains a new color map when allocating out of a previous
color map has failed due to resource exhaustion (that is, too many cells
or planes were in use in the original color map).
.ds fd .PN XCopyColormapAndFree
The errors that can be generated by 
\*(fd
are
.PN BadAlloc
and
.PN BadColor .
.LP
.\" $Header: XFreeCmap.d,v 1.2 87/09/01 14:13:56 mento Exp $
The
.PN XFreeColormap
function deletes the association between the colormap resource ID 
and the color map.
However, this function has no effect on a default color map for a screen.
.ds fd .PN XFreeColormap
The error that can be generated by
\*(fd 
is
.PN BadColor .
.LP
.\" $Header: XChCmap.d,v 1.3 87/09/09 15:26:16 mento Exp $
The
.PN XSetWindowColormap
function sets the specified color map of the specified window.
.ds fd .PN XSetWindowColormap
The errors that can be generated by 
\*(fd
are
.PN BadWindow ,
.PN BadColor ,
and
.PN BadMatch .
.SH DIAGNOSTICS
.\" $Header: badalloc.e,v 1.3 87/09/11 11:17:14 mento Exp $
.TP 1i
.PN BadAlloc
The server failed to allocate the requested resource or server memory.
.\" $Header: badcolor.e,v 1.1 87/09/04 08:22:57 mento Exp $
.TP 1i
.PN BadColor
A value for a Colormap argument does not name a defined Colormap.
.\" $Header: badmatch1.e,v 1.3 87/09/09 18:18:54 mento Exp $
.TP 1i
.PN BadMatch
An
.PN InputOnly
window is used as a Drawable.
.\" $Header: badmatch2.e,v 1.3 87/09/11 11:53:42 mento Exp $
.TP 1i
.PN BadMatch
Some argument or pair of arguments has the correct type and range but fails
to match in some other way required by the request.
.\" $Header: badvalue.e,v 1.1 87/09/04 08:23:19 mento Exp $
.TP 1i
.PN BadValue
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.\" $Header: badwindow.e,v 1.1 87/09/04 08:23:20 mento Exp $
.TP 1i
.PN BadWindow
A value for a Window argument does not name a defined Window.
.SH "SEE ALSO"
XAllocColor(3X),
XQueryColor(3X),
XStoreColors(3X)
.br
\fIXlib \- C Language X Interface, Protocol Version 11\fP
