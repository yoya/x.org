.na
.de FD
.LP
.KS
.TA 1.0i 3i
.ta 1.0i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de PN
.ie t \f(H\|\\$1\|\fR\\$2
.el \fI\|\\$1\|\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XConfigureWindow 3X 
.SH NAME
XConfigureWindow, XMoveWindow, XResizeWindow, XMoveResizeWindow, XSetWindowBorderWidth \- configure windows
.SH SYNTAX
.\" $Header: XReconfWin.f,v 11.6 87/08/15 12:15:21 mento Exp $
XConfigureWindow\^(\^\fIdisplay\fP, \fIw\fP\^, \fIvalue_mask\fP\^, \fIvalues\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      unsigned int \fIvalue_mask\fP\^;
.br
      XWindowChanges *\fIvalues\fP\^;
.LP
.\" $Header: XMoveWindow.f,v 11.4 87/08/15 12:14:25 mento Exp $
XMoveWindow\^(\^\fIdisplay\fP, \fIw\fP\^, \fIx\fP\^, \fIy\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      int \fIx\fP\^, \fIy\fP\^;
.LP
.\" $Header: XChWindow.f,v 11.5 87/08/15 12:11:01 mento Exp $
XResizeWindow\^(\^\fIdisplay\fP, \fIw\fP\^, \fIwidth\fP\^, \fIheight\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      unsigned int \fIwidth\fP\^, \fIheight\fP\^;
.LP
.\" $Header: XConfWindow.f,v 11.6 87/08/28 13:52:53 mento Exp $
XMoveResizeWindow\^(\^\fIdisplay\fP, \fIw\fP\^, \fIx\fP\^, \fIy\fP\^, \fIwidth\fP\^, \fIheight\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      int \fIx\fP\^, \fIy\fP\^;
.br
      unsigned int \fIwidth\fP\^, \fIheight\fP\^;
.LP
XSetWindowBorderWidth\^(\^\fIdisplay\fP, \fIw\fP, \fIwidth\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      unsigned int \fIwidth\fP\^;
.SH ARGUMENTS
.\" $Header: display.a,v 11.8 87/09/03 11:02:24 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.\" $Header: value_mask.a,v 11.3 87/09/11 16:27:34 mento Exp $
.IP \fIvalue_mask\fP 1i
Specifies which values are to be set using information in
the values structure.
This mask is the bitwise inclusive OR of the valid change window values bits.
.\" $Header: values.a,v 11.3 87/06/02 11:36:55 jg Exp $
.IP \fIvalues\fP 1i
Specifies a pointer to the structure
.PN XWindowChanges .
.\" $Header: w.a,v 11.2 87/03/28 11:02:22 mento Exp $
.IP \fIw\fP 1i
Specifies the window ID.
.\" $Header: widtheight.a,v 11.2 87/03/28 11:02:26 mento Exp $
.IP \fIwidth\fP 1i
.br
.ns
.IP \fIheight\fP 1i
Specify the width and height.
.\" $Header: xy.a,v 11.2 87/03/28 11:02:46 mento Exp $
.IP \fIx\fP 1i
.br
.ns
.IP \fIy\fP 1i
Specify the x and y coordinates.
.SH DESCRIPTION
.\" $Header: XReconfWin.d,v 1.1 87/08/27 14:20:57 mento Exp $
The
.PN XConfigureWindow
function uses the values specified in the
.PN XWindowChanges
structure to reconfigure a window's size, position, border, and stacking order.
.ds fd .PN XConfigureWindow
The errors that can be generated by 
\*(fd
are
.PN BadWindow ,
.PN BadMatch ,
and 
.PN BadValue .
.LP
.\" $Header: XMoveWindow.d,v 1.4 87/09/09 15:17:29 mento Exp $
The
.PN XMoveWindow
function moves the specified window to the specified x and y coordinates.
This function does not change the window's size, does not raise the window, and
does not change the mapping state of the window.
.ds fd .PN XMoveWindow
The error that can be generated by
\*(fd 
is
.PN BadWindow .
.LP
.\" $Header: XChWindow.d,v 1.2 87/08/28 06:23:19 mento Exp $
The
.PN XResizeWindow
function changes the inside dimensions of the specified window, not including
its borders.
This function does not change the window's upper-left coordinate or
the origin and does not raise the window.
.ds fd .PN XResizeWindow
The error that can be generated by
\*(fd 
is
.PN BadWindow .
.LP
.\" $Header: XConfWindow.d,v 1.2 87/08/28 06:24:39 mento Exp $
The
.PN XMoveResizeWindow
function changes the size and location of the specified window without raising it.
.ds fd .PN XMoveResizeWindow
The errors that can be generated by 
\*(fd
are
.PN BadWindow ,
.PN BadMatch ,
and
.PN BadValue .
.LP
.\" $Header: XBdrWidth.d,v 1.3 87/09/09 15:19:03 mento Exp $
The
.PN XSetWindowBorderWidth
function sets the specified window's border width to the specified width.
.ds fd .PN XSetWindowBorderWidth
The errors that can be generated by 
\*(fd
are
.PN BadWindow 
and
.PN BadValue .
.SH DIAGNOSTICS
.\" $Header: badmatch1.e,v 1.3 87/09/09 18:18:54 mento Exp $
.TP 1i
.PN BadMatch
An
.PN InputOnly
window is used as a Drawable.
.\" $Header: badmatch2.e,v 1.3 87/09/11 11:53:42 mento Exp $
.TP 1i
.PN BadMatch
Some argument or pair of arguments has the correct type and range but fails
to match in some other way required by the request.
.\" $Header: badvalue.e,v 1.1 87/09/04 08:23:19 mento Exp $
.TP 1i
.PN BadValue
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.\" $Header: badwindow.e,v 1.1 87/09/04 08:23:20 mento Exp $
.TP 1i
.PN BadWindow
A value for a Window argument does not name a defined Window.
.SH "SEE ALSO"
XChangeWindowAttributes(3X),
XCreateWindow(3X),
XDestroyWindow(3X),
XMapWindow(3X),
XRaiseWindow(3X),
XUnmapWindow(3X)
.br
\fIXlib \- C Language X Interface, Protocol Version 11\fP
