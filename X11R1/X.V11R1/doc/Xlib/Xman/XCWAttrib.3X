.na
.de FD
.LP
.KS
.TA 1.0i 3i
.ta 1.0i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de PN
.ie t \f(H\|\\$1\|\fR\\$2
.el \fI\|\\$1\|\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XChangeWindowAttributes 3X 
.SH NAME
XChangeWindowAttributes, XSetWindowBackground, XSetWindowBackgroundPixmap, 
XSetWindowBorder, XSetWindowBorderPixmap \- change window attributes
.SH SYNTAX
.\" $Header: XChWAttr.f,v 11.5 87/08/17 06:36:17 mento Exp $
XChangeWindowAttributes\^(\^\fIdisplay\fP, \fIw\fP\^, \fIvaluemask\fP\^, \fIattributes\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      unsigned long \fIvaluemask\fP\^;
.br
      XSetWindowAttributes *\fIattributes\fP\^;
.LP
.\" $Header: XBackground.f,v 11.9 87/08/15 12:10:41 mento Exp $
XSetWindowBackground\^(\^\fIdisplay\fP, \fIw\fP\^, \fIbackground_pixel\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      unsigned long \fIbackground_pixel\fP\^;
.LP
.\" $Header: XPmapBgnd.f,v 11.5 87/08/15 12:14:45 mento Exp $
XSetWindowBackgroundPixmap\^(\^\fIdisplay\fP, \fIw\fP\^, \fIbackground_pixmap\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      Pixmap \fIbackground_pixmap\fP\^;
.LP 
.\" $Header: XBorder.f,v 11.6 87/08/17 06:39:36 mento Exp $
XSetWindowBorder\^(\^\fIdisplay\fP, \fIw\fP\^, \fIborder_pixel\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      unsigned long \fIborder_pixel\fP\^;
.LP
.\" $Header: XPmapBorder.f,v 11.5 87/08/15 12:14:46 mento Exp $
XSetWindowBorderPixmap\^(\^\fIdisplay\fP, \fIw\fP\^, \fIborder_pixmap\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      Pixmap \fIborder_pixmap\fP\^;
.SH ARGUMENTS
.\" $Header: attributes.a,v 11.3 87/08/28 03:47:56 mento Exp $
.IP \fIattributes\fP 1i
Attributes of the window to be set at creation time should be set in
this structure.
The valuemask should have the appropriate bits
set to indicate which attributes have been set in the structure.
.\" $Header: back_pix.a,v 1.2 87/09/04 15:45:44 mento Exp $
.IP \fIbackground_pixel\fP 1i
Specifies the pixel of the background.
This pixel value determines which entry in the colormap is used.
.\" $Header: tile.a,v 11.10 87/09/11 16:35:09 mento Exp $
.IP \fIbackground_pixmap\fP 1i
Specifies the background pixmap.
If a Pixmap ID is specified, the background is painted with this pixmap.
If
.PN None ,
no background is painted.
If
.PN ParentRelative ,
the parent's pixmap is used.
.\" $Header: pixel.a,v 11.2 87/03/28 10:59:10 mento Exp $
.IP \fIborder_pixel\fP 1i
Specifies the entry in the color map. 
.\" $Header: bord_pixmap.a,v 1.4 87/09/11 16:43:39 mento Exp $
.IP \fIborder_pixmap\fP 1i
Specifies the border pixmap.
If you specify a pixmap ID, the associated pixmap is used for the border.
If
.PN CopyFromParent
is specified, a copy of the parent window's border pixmap is used. 
.\" $Header: display.a,v 11.8 87/09/03 11:02:24 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.\" $Header: valuemask.a,v 11.7 87/08/31 11:51:54 mento Exp $
.IP \fIvaluemask\fP 1i
Specifies which window attributes are defined in the attributes
argument.
This mask is the bitwise inclusive OR of the valid attribute mask bits.
If valuemask is zero (0), 
the rest is ignored, and the attributes are not referenced.
.\" $Header: w.a,v 11.2 87/03/28 11:02:22 mento Exp $
.IP \fIw\fP 1i
Specifies the window ID.
.SH DESCRIPTION
.\" $Header: XChWAttr.d,v 1.3 87/09/10 18:42:37 mento Exp $
Depending on the valuemask,
the
.PN XChangeWindowAttributes
function uses the window attributes in the
.PN XSetWindowAttributes
structure to change the specified window attributes.
.ds fd .PN XChangeWindowAttributes
The errors that can be generated by 
\*(fd
are
.PN BadWindow ,
.PN BadPixmap ,
.PN BadPixmap ,
.PN BadColor ,
.PN BadCursor ,
.PN BadMatch ,
.PN BadAccess ,
and
.PN BadValue .
.LP
.\" $Header: XBackground.d,v 1.2 87/09/09 14:55:57 mento Exp $
The
.PN XSetWindowBackground
function sets the background pixel of the window to the pixel value you specify.
.ds fd .PN XSetWindowBackground
The errors that can be generated by 
\*(fd
are
.PN BadWindow 
and
.PN BadMatch .
.LP
.\" $Header: XPmapBgnd.d,v 1.2 87/09/09 14:58:56 mento Exp $
The
.PN XSetWindowBackgroundPixmap
function sets the background pixmap of the window to the pixmap you specify.
.ds fd .PN XSetWindowBackgroundPixmap
The errors that can be generated by 
\*(fd
are
.PN BadWindow ,
.PN BadPixmap ,
.PN BadColor ,
and
.PN BadMatch .
.LP 
.\" $Header: XBorder.d,v 1.3 87/09/09 15:00:41 mento Exp $
The
.PN XSetWindowBorder
function sets the border pixel of the window to the pixel value you specify.
It uses this value as an entry into the color map to determine which color 
is to be used to paint the border.
.ds fd .PN XSetWindowBorder
The errors that can be generated by 
\*(fd
are
.PN BadWindow ,
.PN BadPixmap ,
.PN BadValue ,
and 
.PN BadMatch .
.LP
.\" $Header: XPmapBorder.d,v 1.2 87/09/09 15:01:51 mento Exp $
The
.PN XSetWindowBorderPixmap
function sets the border pixmap of the window to the pixmap you specify.
It uses this entry for the border.
.ds fd .PN XSetWindowBorderPixmap
The errors that can be generated by 
\*(fd
are
.PN BadWindow ,
.PN BadPixmap ,
.PN BadMatch ,
and
.PN BadValue .
.SH DIAGNOSTICS
.\" $Header: badaccess2.e,v 1.1 87/09/04 08:22:45 mento Exp $
.TP 1i
.PN BadAccess
A client attempted
to free a color map entry that it did not already allocate.
.\" $Header: badaccess3.e,v 1.1 87/09/04 08:22:50 mento Exp $
.TP 1i
.PN BadAccess
A client attempted
to store into a read-only color map entry.
.\" $Header: badcolor.e,v 1.1 87/09/04 08:22:57 mento Exp $
.TP 1i
.PN BadColor
A value for a Colormap argument does not name a defined Colormap.
.\" $Header: badcursor.e,v 1.1 87/09/04 08:22:58 mento Exp $
.TP 1i
.PN BadCursor
A value for a Cursor argument does not name a defined Cursor.
.\" $Header: badmatch2.e,v 1.3 87/09/11 11:53:42 mento Exp $
.TP 1i
.PN BadMatch
Some argument or pair of arguments has the correct type and range but fails
to match in some other way required by the request.
.\" $Header: badmatch3.e,v 1.1 87/09/10 18:55:44 mento Exp $
.TP 1i
.PN BadMatch
An
.PN InputOnly
window locks this attribute.
.\" $Header: badpixmap.e,v 1.1 87/09/04 08:23:16 mento Exp $
.TP 1i
.PN BadPixmap
A value for a Pixmap argument does not name a defined Pixmap.
.\" $Header: badvalue.e,v 1.1 87/09/04 08:23:19 mento Exp $
.TP 1i
.PN BadValue
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.\" $Header: badwindow.e,v 1.1 87/09/04 08:23:20 mento Exp $
.TP 1i
.PN BadWindow
A value for a Window argument does not name a defined Window.
.SH "SEE ALSO"
XConfigureWindow(3X),
XCreateWindow(3X),
XDestroyWindow(3X),
XMapWindow(3X),
XRaiseWindow(3X),
XUnmapWindow(3X)
.br
\fIXlib \- C Language X Interface, Protocol Version 11\fP
