.na
.de FD
.LP
.KS
.TA 1.0i 3i
.ta 1.0i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de PN
.ie t \f(H\|\\$1\|\fR\\$2
.el \fI\|\\$1\|\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XCreateWindow 3X 
.SH NAME
XCreateWindow, XCreateSimpleWindow \- create windows
.SH SYNTAX
.\" $Header: XWindow.f,v 11.8 87/08/15 12:17:43 mento Exp $
Window XCreateWindow\^(\^\fIdisplay\fP, \fIparent\fP\^, \fIx\fP\^, \fIy\fP\^, \fIwidth\fP\^, \fIheight\fP\^, \fIborder_width\fP\^, \fIdepth\fP\^, 
.br
                       \fIclass\fP\^, \fIvisual\fP\^, \fIvaluemask\fP\^, \fIattributes\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIparent\fP\^;
.br
      int \fIx\fP\^, \fIy\fP\^; 
.br
      unsigned int \fIwidth\fP\^, \fIheight\fP\^;
.br
      unsigned int \fIborder_width\fP\^;
.br
      int \fIdepth\fP\^;
.br
      unsigned int \fIclass\fP\^;
.br
      Visual *\fIvisual\fP\^
.br
      unsigned long \fIvaluemask\fP\^;
.br
      XSetWindowAttributes *\fIattributes\fP\^;
.LP
.\" $Header: XCreWin.f,v 11.11 87/09/07 09:48:31 mento Exp $
Window XCreateSimpleWindow\^(\^\fIdisplay\fP, \fIparent\fP\^, \fIx\fP\^, \fIy\fP\^, \fIwidth\fP\^, \fIheight\fP\^, \fIborder_width\fP\^, 
.br
                             \fIborder\fP\^, \fIbackground\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIparent\fP\^;
.br
      int \fIx\fP\^, \fIy\fP\^;
.br
      unsigned int \fIwidth\fP\^, \fIheight\fP\^, \fIborder_width\fP\^;
.br
      unsigned long \fIborder\fP\^;
.br
      unsigned long \fIbackground\fP\^;
.SH ARGUMENTS
.\" $Header: attributes.a,v 11.3 87/08/28 03:47:56 mento Exp $
.IP \fIattributes\fP 1i
Attributes of the window to be set at creation time should be set in
this structure.
The valuemask should have the appropriate bits
set to indicate which attributes have been set in the structure.
.\" $Header: backpixel.a,v 11.3 87/08/31 09:38:00 mento Exp $
.IP \fIbackground\fP 1i
Specifies the pixel value that you want to set for the specified 
window's background.

.\" $Header: border.a,v 11.6 87/08/31 18:36:30 mento Exp $
.IP \fIborder\fP 1i
Specifies the border pixel of the window.
.\" $Header: borderwidth.a,v 11.6 87/08/31 09:39:20 mento Exp $
.IP \fIborder_width\fP 1i
Specifies, in pixels, the width of the created window's border.
The border_width for an
.PN InputOnly
window must be zero (0).
Otherwise, a
.PN BadMatch
error is returned.
.\" $Header: class.a,v 11.5 87/07/22 03:44:35 mento Exp $
.IP \fIclass\fP 1i
Specifies the created window's class.
You can pass one of these constants:
.PN InputOutput , 
.PN InputOnly , 
or 
.PN CopyFromParent .
A class of 
.PN CopyFromParent
means the class
is taken from the parent.
.\" $Header: depth.a,v 11.4 87/05/29 04:09:07 jg Exp $
.IP \fIdepth\fP 1i
A depth of zero for class 
.PN InputOutput 
or 
.PN CopyFromParent
means the depth is taken from the parent.
.\" $Header: display.a,v 11.8 87/09/03 11:02:24 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.\" $Header: parent.a,v 11.3 87/07/21 10:27:48 mento Exp $
.IP \fIparent\fP 1i
Specifies the parent window ID.
.\" $Header: valuemask.a,v 11.7 87/08/31 11:51:54 mento Exp $
.IP \fIvaluemask\fP 1i
Specifies which window attributes are defined in the attributes
argument.
This mask is the bitwise inclusive OR of the valid attribute mask bits.
If valuemask is zero (0), 
the rest is ignored, and the attributes are not referenced.
.\" $Header: visual.a,v 11.7 87/09/07 13:44:54 jg Exp $
.IP \fIvisual\fP 1i
Specifies the visual type.
A visual of 
.PN CopyFromParent 
means the visual type is taken from the 
parent.
.\" $Header: widtheight.a,v 11.2 87/03/28 11:02:26 mento Exp $
.IP \fIwidth\fP 1i
.br
.ns
.IP \fIheight\fP 1i
Specify the width and height.
.\" $Header: xy.a,v 11.2 87/03/28 11:02:46 mento Exp $
.IP \fIx\fP 1i
.br
.ns
.IP \fIy\fP 1i
Specify the x and y coordinates.
.SH DESCRIPTION
.\" $Header: XWindow.d,v 1.1 87/08/27 14:22:19 mento Exp $
The
.PN XCreateWindow
function creates an unmapped subwindow for a specified parent window, returns the
window ID of the created window, and causes the X server to generate a
.PN CreateNotify
event.
The created window is placed on top in the stacking order with respect to siblings.
.ds fd .PN XCreateWindow
The errors that can be generated by 
\*(fd
are
.PN BadAlloc ,
.PN BadColor ,
.PN BadCursor ,
.PN BadMatch ,
.PN BadPixmap ,
.PN BadValue ,
and
.PN BadWindow .
.LP
.\" $Header: XCreWin.d,v 1.1 87/08/27 14:18:30 mento Exp $
The
.PN XCreateSimpleWindow
function creates an unmapped
.PN InputOutput
subwindow for a specified parent window, returns the
window ID of the created window, and causes the X server to generate a
.PN CreateNotify
event.
.ds fd .PN XCreateWindow
The errors that can be generated by 
\*(fd
are
.PN BadAlloc ,
.PN BadValue ,
and
.PN BadWindow .
.SH DIAGNOSTICS
.\" $Header: badalloc.e,v 1.3 87/09/11 11:17:14 mento Exp $
.TP 1i
.PN BadAlloc
The server failed to allocate the requested resource or server memory.
.\" $Header: badcolor.e,v 1.1 87/09/04 08:22:57 mento Exp $
.TP 1i
.PN BadColor
A value for a Colormap argument does not name a defined Colormap.
.\" $Header: badcursor.e,v 1.1 87/09/04 08:22:58 mento Exp $
.TP 1i
.PN BadCursor
A value for a Cursor argument does not name a defined Cursor.
.\" $Header: badmatch4.e,v 1.2 87/09/11 11:43:34 mento Exp $
.TP 1i
.PN BadMatch
The values do not exist for an
.PN InputOnly
window.
.\" $Header: badmatch2.e,v 1.3 87/09/11 11:53:42 mento Exp $
.TP 1i
.PN BadMatch
Some argument or pair of arguments has the correct type and range but fails
to match in some other way required by the request.
.\" $Header: badpixmap.e,v 1.1 87/09/04 08:23:16 mento Exp $
.TP 1i
.PN BadPixmap
A value for a Pixmap argument does not name a defined Pixmap.
.\" $Header: badvalue.e,v 1.1 87/09/04 08:23:19 mento Exp $
.TP 1i
.PN BadValue
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.\" $Header: badwindow.e,v 1.1 87/09/04 08:23:20 mento Exp $
.TP 1i
.PN BadWindow
A value for a Window argument does not name a defined Window.
.SH "SEE ALSO"
XChangeWindowAttributes(3X),
XConfigureWindow(3X),
XDestroyWindow(3X),
XMapWindow(3X),
XRaiseWindow(3X),
XUnmapWindow(3X)
.br
\fIXlib \- C Language X Interface, Protocol Version 11\fP
