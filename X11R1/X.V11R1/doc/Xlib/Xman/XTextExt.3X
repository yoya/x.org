.na
.de FD
.LP
.KS
.TA 1.0i 3i
.ta 1.0i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de PN
.ie t \f(H\|\\$1\|\fR\\$2
.el \fI\|\\$1\|\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XTextExtents 3X 
.SH NAME
XTextExtents, XTextExtents16, XQueryTextExtents, XQueryTextExtents16 
\- compute or query text extents
.SH SYNTAX
XTextExtents\^(\^\fIfont_struct\fP\^, \fIstring\fP\^, \fInchars\fP\^, \fIdirection_return\fP, \fIascent_return\fP, \fIdescent_return\fP,
.br
               \fIoverall_return\fP\^)
.br
      XFontStruct *\fIfont_struct\fP\^;
.br
      char *\fIstring\fP\^;
.br
      int \fInchars\fP\^;
.br
      int *\fIdirection_return\fP\^;
.br
      int *\fIascent_return\fP, *\fIdescent_return\fP\^;
.br
      XCharStruct *\fIoverall_return\fP\^;

.LP
XTextExtents16\^(\^\fIfont_struct\fP\^, \fIstring\fP\^, \fInchars\fP\^, \fIdirection_return\fP, \fIascent_return\fP, \fIdescent_return\fP, 
.br
                 \fIoverall_return\fP\^)
.br
      XFontStruct *\fIfont_struct\fP\^;
.br
      XChar2b *\fIstring\fP\^;
.br
      int \fInchars\fP\^;
.br
      int *\fIdirection_return\fP\^;
.br
      int *\fIascent_return\fP, *\fIdescent_return\fP\^;
.br
      XCharStruct *\fIoverall_return\fP\^;

.LP
XQueryTextExtents\^(\^\fIdisplay\fP, \fIfont_ID\fP, \fIstring\fP, \fInchars\fP,\fIdirection_return\fP, \fIascent_return\fP, 
.br
                    \fIdescent_return\fP, \fIoverall_return\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      XID \fIfont_ID\fP\^;
.br
      char *\fIstring\fP\^;
.br
      int \fInchars\fP\^;
.br
      int *\fIdirection_return\fP\^;
.br
      int *\fIascent_return\fP, *\fIdescent_return\fP\^;
.br
      XCharStruct *\fIoverall_return\fP\^;
.LP
XQueryTextExtents16\^(\^\fIdisplay\fP, \fIfont_ID\fP, \fIstring\fP, \fInchars\fP, \fIdirection_return\fP, \fIascent_return\fP, 
.br
                        \fIdescent_return\fP, \fIoverall_return\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      XID \fIfont_ID\fP\^;
.br
      XChar2b *\fIstring\fP\^;
.br
      int \fInchars\fP\^;
.br
      int *\fIdirection_return\fP\^;
.br
      int *\fIascent_return\fP, *\fIdescent_return\fP\^;
.br
      XCharStruct *\fIoverall_return\fP\^;
.SH ARGUMENTS
.IP \fIascent_return\fP 1i
Returns the font ascent member.
.IP \fIdescent_return\fP 1i
Returns the font descent member.
.IP \fIdirection_return\fP 1i
Returns the value of the direction hint member:
.PN FontLeftToRight
or
.PN FontRightToLeft .
.\" $Header: display.a,v 11.8 87/09/03 11:02:24 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.IP \fIfont_ID\fP 1i
Specifies either the font ID or the graphics context that contains
the font.
.IP \fIfont_struct\fP 1i
Specifies a pointer to the 
.PN XFontStruct 
structure.
.IP \fInchars\fP 1i
Specifies the number of characters in the character string.
.\" $Header: string.a,v 11.3 87/04/15 12:24:39 jg Exp $
.IP \fIstring\fP 1i
Specifies the character string.
.IP \fIoverall_return\fP 1i
Returns the overall size in the specified
.PN XCharStruct 
structure.
.SH DESCRIPTION
.\" $Header: XTextExt.d,v 1.3 87/08/31 11:44:20 mento Exp $
The
.PN XTextExtents
and
.PN XTextExtents16
functions return the logical extents of the specified 8-bit
and 16-bit character string.
.LP
.\" $Header: XQryTExts.d,v 1.4 87/09/02 09:32:24 mento Exp $
The
.PN XQueryTextExtents
and
.PN XQueryTextExtents16
functions return the logical extents of the specified 8-bit and 16-bit
character string in the specified font or the font contained in the
specified GC.
.ds fd .PN XQueryTextExtents
.ds fe .PN XQueryTextExtents16
The errors that can be generated by 
\*(fd
and
\*(fe
are
.PN BadGC
and
.PN BadFont .
.SH DIAGNOSTICS
.\" $Header: badfont.e,v 1.2 87/09/09 18:08:11 mento Exp $
.TP 1i
.PN BadFont
A value for a Font or GContext argument does not name a defined Font.
.\" $Header: badgc.e,v 1.1 87/09/04 08:23:02 mento Locked $
.TP 1i
.PN BadGC
A value for a GContext argument does not name a defined GContext.
.SH "SEE ALSO"
XTextWidth(3X)
.br
\fIXlib \- C Language X Interface, Protocol Version 11\fP
