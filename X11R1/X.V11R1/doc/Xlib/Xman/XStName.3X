.na
.de FD
.LP
.KS
.TA 1.0i 3i
.ta 1.0i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de PN
.ie t \f(H\|\\$1\|\fR\\$2
.el \fI\|\\$1\|\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XStoreName 3X 
.SH NAME
XStoreName, XFetchName \- set or get window names
.SH SYNTAX
.\" $Header: XStoreName.f,v 11.3 87/08/15 12:16:56 mento Exp $
XStoreName\^(\^\fIdisplay\fP, \fIw\fP\^, \fIwindow_name\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      char *\fIwindow_name\fP\^;
.LP
.\" $Header: XFetchName.f,v 11.6 87/09/05 08:15:21 mento Exp $
int XFetchName\^(\^\fIdisplay\fP, \fIw\fP\^, \fIwindow_name_return\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Window \fIw\fP\^;
.br
      char **\fIwindow_name_return\fP\^;
.SH ARGUMENTS
.\" $Header: display.a,v 11.8 87/09/03 11:02:24 mento Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.\" $Header: w.a,v 11.2 87/03/28 11:02:22 mento Exp $
.IP \fIw\fP 1i
Specifies the window ID.
.\" $Header: window_name.a,v 11.2 87/03/28 11:02:35 mento Exp $
.IP \fIwindow_name\fP 1i
Specifies the name of the window.
.\" $Header: window_name1.a,v 1.3 87/09/05 08:16:24 mento Exp $
.IP \fIwindow_name_return\fP 1i
Returns a pointer to the window name, which will be a null-terminated string.
.SH DESCRIPTION
.\" $Header: XStoreName.d,v 1.1 87/08/27 14:21:53 mento Exp $
The
.PN XStoreName
function assigns the name passed to window_name to the specified window.
.ds fd .PN XStoreName
The errors that can be generated by 
\*(fd
are
.PN BadWindow 
and
.PN BadAlloc .
.LP
.\" $Header: XFetchName.d,v 1.2 87/09/05 08:20:50 mento Exp $
The
.PN XFetchName
function obtains a window name and returns either a nonzero
if it succeeds or zero (0) if it fails (for example,
if no name has been set for the argument window).
.ds fd .PN XFetchName
The error that can be generated by
\*(fd 
is
.PN BadWindow .
.SH PROPERTY
WM_NAME
.SH DIAGNOSTICS
.\" $Header: badalloc.e,v 1.3 87/09/11 11:17:14 mento Exp $
.TP 1i
.PN BadAlloc
The server failed to allocate the requested resource or server memory.
.\" $Header: badwindow.e,v 1.1 87/09/04 08:23:20 mento Exp $
.TP 1i
.PN BadWindow
A value for a Window argument does not name a defined Window.
.SH "SEE ALSO"
XSetCommand(3X),
XSetIconName(3X),
XSetIconSizeHints(3X),
XSetNormalHints(3X),
XSetSizeHints(3X),
XSetStandardProperties(3X),
XSetWMHints(3X),
XSetZoomHints(3X)
.br
\fIXlib \- C Language X Interface, Protocol Version 11\fP
